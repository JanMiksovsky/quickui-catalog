<!-- A button that uses CSS image sprites for its background. -->

<Control name="SpriteButton">

<prototype>
    <BasicButton>
        <Sprite id="backgroundLeft" />
        <Sprite id="backgroundRight" />
        <button id="SpriteButton_content" />
    </BasicButton>
</prototype>

<style>

{
    display: inline-block;
    position: relative;
}

.Sprite {
    height: 100%;
    position: absolute;
    top: 0;
    /* 
     * Each sprite covers half the background
     */
    width: 50%;
    z-index: 0;
}

#backgroundLeft {
    background-position: 0 0;
    left: 0;
}

#backgroundRight {
    background-position: right 0;
    /*
     * Use left: 50% instead of right: 0, as the latter doesn't work exactly right on WebKit.
     */
    left: 50%;
}

button {
    background: transparent none repeat scroll 0 0;
    border: medium none;
    cursor: pointer;
    outline: none;
    -moz-outline: none;
    overflow: visible;
    position: relative;
    white-space: nowrap;
}

.SpriteButton.disabled button {
    cursor: default;
}

</style>
    
<script>
SpriteButton.prototype.extend({
    
    content: Control.chain("$SpriteButton_content", "content"),
    image: Control.chain("$sprites", "image"),

    initialize: function() {
        this._super();
        var self = this;
        this.$SpriteButton_content()
            .blur(function() { self.blur(); })
            .focus(function() { self.focus(); });
    },
    
    cellHeight: Control.chain("css/height", function(value) {
        this.$SpriteButton_content().height(value + "px");
        this.$sprites().cellHeight(value);
    }),
    
    disabled: function(value) {
        if (value !== undefined)
        {
            this.$SpriteButton_content().attr("disabled", String(value) == "true");
        }
        return this._super( value );
    },
    
    $sprites: function() {
        return this.children().filter(".Sprite").cast();
    },
    
    _renderButtonState: function(buttonState) {
        this.$sprites().currentCell(buttonState);
    }

});
</script>

</Control>