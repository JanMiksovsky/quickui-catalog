<!-- A popup menu. This is typically used in a Menu bar. -->

<Control className="Menu" genericSupport="true">

<prototype>
    <PopupSource>
        <popup>
            <div ref="shield"/> <!-- Used to obscure borders between description and content. -->
            <div ref="Menu_popup"/>
        </popup>
    </PopupSource>
</prototype>

<style>
{
    cursor: default;
    display: inline-block;
    -moz-user-select: -moz-none;
    -webkit-user-select: none;
    user-select: none;
}

.PopupSource_content {
    white-space: nowrap;
}

.shield {
    display: none;  /* Shield isn't shown unless it's requested. */
    position: absolute;
    z-index: 0;
}
.PopupSource_popup.popupAlignLeft .shield {
    left: 0;
}
.PopupSource_popup.popupAlignRight .shield {
    right: 0;
}

/* Generic appearance */
.Menu.generic {
    -moz-box-sizing: border-box;
    box-sizing: border-box;
}

.Menu.generic .PopupSource_content {
    border: 1px solid transparent;
    padding: 0.5em;
}
.Menu.generic .PopupSource_content:hover {
    background: #eee;
}

.Menu.generic .shield {
    background: white;  /* Same as menu's background color */
    height: 1px;        /* Same as this menu's border-top-width */
    top: -1px;          /* Same as border-top-width but negative */
}
.Menu.generic .PopupSource_popup.popupAppearsBelow .shield {
    display: block;
}

.Menu.generic .PopupSource_popup {
    cursor: default;
    margin: 0;
    outline: none;
    padding: 0.5em 0;
}

.Menu.generic.opened .PopupSource_content {
    background: white;
    border-color: #ccc; /* IE8 */
    border-color: rgba(0, 0, 0, 0.2);
    border-bottom-style: none;
}
</style>

<script>
Menu.prototype.extend({
    
    /*
     * The menu's descriptive label. Clicking this will open the menu.
     */
    content: function( content ) {
        var result = this._super( content );
        if ( content !== undefined && this.inDocument() ) {
            this._updateShield();
        }
        return result;
    },
     
    initialize: function() {
        
        this._super();
        
        var self = this;
        this.inDocument( function() {
            this._updateShield();
        });
        this.$PopupSource_popup().on( "click", function( event ) {
            // Absorb clicks outside of menu items.
            var $menuItem = $( event.target ).closest( ".MenuItem" );
            if ( $menuItem.length === 0 ) {
                event.stopPropagation();
            }
        });
    },
    
    popup: Control.chain( "$Menu_popup", "content" ),
    
    /*
     * The "shield" is a thin block that can be used to obscure the boundary
     * between the content and popup so that those two elements can
     * appear to exist on a seamless surface. For this to work, the shield
     * needs to be (almost) as wide as the description. 
     */
    _updateShield: function() {
        // We want the width of the content including padding, but not
        // including border.
        var $content = this.$PopupSource_content();
        var shieldWidth = $content.width()
            + parseInt( $content.css( "padding-left" ) )
            + parseInt( $content.css( "padding-right" ) );
        this.$shield().width( shieldWidth );
    }
    
});
</script>

</Control>
