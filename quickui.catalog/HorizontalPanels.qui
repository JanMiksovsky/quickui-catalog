<Control name="HorizontalPanels">

<prototype>
    <Layout>
        <div id="HorizontalPanels_left" />
        <div id="HorizontalPanels_content"/>
        <div id="HorizontalPanels_right" />
    </Layout>
</prototype>

<style>
{
    box-sizing: border-box;
    -moz-box-sizing: border-box;
    -ms-box-sizing: border-box;
    -webkit-box-sizing: border-box;
    position: relative;
    /*
    Setting width when not in fill mode prevents resize logic from
    cylcing endlessly and shouldn't otherwise affect anything.
    */
    width: 100%;
}

.HorizontalPanels > * {
    box-sizing: border-box;
    -moz-box-sizing: border-box;
    -ms-box-sizing: border-box;
    -webkit-box-sizing: border-box;
    bottom: 0;
    position: absolute;
    top: 0;
}

#HorizontalPanels_left {
    left: 0;
}
#HorizontalPanels_right {
    right: 0;
}

.HorizontalPanels.fill {
    height: 100%;
    position: absolute;
}
</style>

<script>
HorizontalPanels.prototype.extend({
    
    content: Control.chain( "$HorizontalPanels_content", "content", function() {
        this.trigger( "sizeChanged" );        
    }),
    
    fill: Control.chain( "applyClass/fill" ),
    
    layout: function() {
        var panelLeftWidth = this.$HorizontalPanels_left().outerWidth();
        var panelRightWidth = this.$HorizontalPanels_right().outerWidth();
        this.$HorizontalPanels_content().css({
            left: panelLeftWidth,
            right: panelRightWidth
        });
        return this;
    },
    
    left: Control.chain( "$HorizontalPanels_left", "content", function() {
        this.trigger( "sizeChanged" );        
    }),
    
    right: Control.chain( "$HorizontalPanels_right", "content", function() {
        this.trigger( "sizeChanged" );        
    })

});
</script>

</Control>
