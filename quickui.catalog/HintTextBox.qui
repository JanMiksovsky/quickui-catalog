<Control className="HintTextBox">

<content>
    <input id="HintTextBox_textBox" type="text"/>
    <div id="HintTextBox_hint"/>
</content>

<style>

{
    cursor: text;
    position: relative;
}

#HintTextBox_textBox {
    width: 100%;
}

#HintTextBox_hint {
    bottom: 0;
    color: gray;
    height: 1.25em;
    margin: auto 0;
    position: absolute;
    padding: 0 6px;
    overflow: hidden;
    top: 0;
    width: 100%;
}

</style>

<script>
HintTextBox.prototype.extend({
    
    content: Control.chain("$HintTextBox_textBox", "content", function() {
        this._showHintIfEmpty();
    }),
    hint: Control.chain("$HintTextBox_hint", "content"),
    
    initialize: function() {
        var self = this;
        this.on({
            "click": function() { self._hideHint(); },
            "focus": function() {
                if (!self._isTextBoxFocused())
                {
                    self.$HintTextBox_textBox().focus();
                }
            }
        });
        this.$HintTextBox_textBox().on({
            "blur": function() {
                self
                    ._isTextBoxFocused(false)
                    ._showHintIfEmpty();
            },
            "keydown keyup": function() { self._showHintIfEmpty(); },
            "focus": function() { self._isTextBoxFocused(true); }
        });
        this.$HintTextBox_hint().click(function() {
            self._hideHint();
        });
    },
    
    _isTextBoxFocused: Control.property(null, false),
    
    _hideHint: function() {
        this.$HintTextBox_hint().hide(); 
        this.$HintTextBox_textBox().focus();
    },
    
    _showHintIfEmpty: function() {
        this.$HintTextBox_hint().toggle(this.content().length == 0);
    }
    
});
</script>

</Control>
