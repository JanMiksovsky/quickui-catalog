<!-- A control that can be used as a tab in a TabSet. -->

<Control className="Tab">

<style>
{
    /*
     * Forcing a tiny bit of padding (instead of zero) helps in the case where
     * a surrounding TabSet is trying to determine the height of a Tab that
     * contains a paragraph (or, presumably, other elements) that have top and
     * bottom margins. In that case, the Tab's outerHeight() will fail to
     * include the paragraph's margins, with the result that the TabSet can
     * incorrectly calculate the height it needs to be. Forcing some padding
     * seems to work around this problem.
     */
    padding: 1px;
}
</style>

<script>
Tab.prototype.extend({
    
    /*
     * The content of the tab.
     */
    content: function( value ) {
        var result = this._super( value );
        if ( value !== undefined ) {
            // The parent (e.g., a TabSet) may want to know that the size
            // of this element has changed.
            this.trigger( "layout" );  
        }
        return result;
    },
    
    /*
     * The description which should be rendered in the button for the tab.
     */
    description: Control.property()
    
});
</script>

</Control>
