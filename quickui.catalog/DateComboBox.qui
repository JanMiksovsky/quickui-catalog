<!--
Lets user pick a date with a date-optimzed text box or a navigable month calendar.
-->

<Control className="DateComboBox">

<prototype>
    <ComboBox textBoxClass="DateTextBox">
        <popup>
            <CalendarMonthNavigator id="navigator"/>
        </popup>
    </ComboBox>
</prototype>

<script>
DateComboBox.prototype.extend({
    
    navigatorClass: Control.chain( "$navigator", "transmute" ),
    required: Control.chain( "$ComboBox_content", "required" ),
    
    initialize: function() {
        
        this._super();
        this.genericIfClassIs( DateComboBox );
        
        // Sync up dates
        this.date( this.$navigator().date() );

        // Changing text updates navigator, and vice versa.
        var self = this;
        this.on({
            "dateChanged": function( event, date ) {
                self.date( date );
            },
            "dateSelected": function( event, date ) {
                self.date( date );
                self.close();
            }
        });
    },
    
    /*
     * Keep dates in text box and navigator in sync.
     */
    date: Control.property( function( date ) {
        
        var time = date && date.getTime();
        
        var textBoxDate = this.$ComboBox_content().date();
        if ( !textBoxDate || textBoxDate.getTime() !== time ) {
            this.$ComboBox_content().date( date );
        }
        
        // Navigator can only handle non-null dates.
        if ( date ) {
            var navigatorDate = this.$navigator().date();
            if ( !navigatorDate || navigatorDate.getTime() !== time ) {
                this.$navigator().date( date );
            }
        }
    })

});
</script>

</Control>
