<!-- Shows a block of a CSS color, either a color name or value. -->

<Control className="ColorSwatch">

<style>
{
    -moz-box-sizing: border-box;
    -ms-box-sizing: border-box;
    -webkit-box-sizing: border-box;
    box-sizing: border-box;
    height: 1.25em;
    margin: 3px;
    width: 1.25em;
}

.ColorSwatch.none {
    border: 1px solid lightgray;
}
</style>

<script>
ColorSwatch.prototype.extend({
    
    color: function( color ) {
        if ( color === undefined ) {
            return this.css( "background-color" );
        } else {
            
            this
                .css( "background-color", "white" ) // Apply white first
                .css( "background-color", color );  // Apply new color
        
            /* Validate the color value. */
            var colorValid;
            if ( color === "" || color === null ) {
                colorValid = false;
            } else if ( color === "white" || color === "rgb(255, 255, 255)" ) {
                // White color values are known to be good.
                colorValid = true;
            } else {
                // See if the new value "stuck", or is still white.
                var colorValue = this.css( "background-color" );
                colorValid = !( colorValue === "white" || colorValue === "rgb(255, 255, 255)" );
            }
            return this.toggleClass( "none", !colorValid );
        }
    }
    
});
</script>

</Control>
