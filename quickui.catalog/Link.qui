<!--
Wraps an anchor tag.

Unlike a stock anchor tag, this will show a hand cursor even when the href
is empty, as is often the case with a link whose behavior is determined by
a click event handler.

The link will have the "current" style if it points to the current page.

This can also serve as a useful base class for custom link classes.
-->

<Control className="Link" tag="a">

<script>
Link.prototype.extend({
    
    /*
     * True if the link points to the current page.
     */
    current: Control.chain( "applyClass/current" ),

    /*
     * The location that will be opened if the user clicks the link.
     */
    href: Control.chain( "prop/href", function() {
        this._checkIfCurrent();
    }),
    
    initialize: function() {
        if ( this.href() ) {
            this._checkIfCurrent();
        } else { 
            // Set a placeholder href which will force the display of an
            // underline, and use of a hand cursor.
            this.href( "javascript:" );
        }
    },
    
    /*
     * True if the link points to an area of the site (with sub-pages). If
     * true, the link will be considered current if it points to any page within
     * that area of the site. The default is false.
     */
    linksToArea: Control.property( function() {
        this._checkIfCurrent();
    }),

    /*
     * The target of the link.
     */
    target: Control.chain( "prop/target" ),

    /*
     * Apply the "current" style if the link points to the page we're on.
     */    
    _checkIfCurrent: function() {
        var current = false;
        var localPath = this._localPath();
        if ( localPath ) {
            var pathname = window.location.pathname;
            var pathToMatch = this.linksToArea()
                // Area link: Current if it matches on the left.
                ? pathname.substring( 0, localPath.length )
                // Normal link: Current if the whole path matches. 
                : pathname;
            current = ( localPath === pathToMatch );
        }
        this.current( current );
    },
    
    /*
     * Returns the pathname portion of the link (the portion after the domain)
     * if the link points to a location in the current domain. Otherwise
     * return null.
     */
    _localPath: function() {
        var href = this.href();
        if ( !href ) {
            return null;
        }
        var origin = window.location.protocol + "//" + window.location.hostname + "/";
        // Does left portion of link match origin?
        return pathname = ( href.substring( 0, origin.length ) === origin )
            ? href.substring( origin.length - 1 ) // Include last slash in origin
            : href;
    }

});
</script>

</Control>
