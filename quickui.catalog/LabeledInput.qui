<!--
An input control (e.g., a check box or radio button) with an associated label.
The label is automatically associated with the input, ensuring that user clicks
on the label have the same effect as clicking the input control.
-->

<Control className="LabeledInput">

<content>
    <input id="input"/><label id="LabeledInput_content"/>
</content>

<style>
{
    display: inline-block;
}

#input {
    margin-left: 0;
}

#LabeledInput_content {
    user-select: none;
    -khtml-user-select:none;
    -moz-user-select: none;
    -webkit-user-select: none;
}
</style>

<script>
LabeledInput.prototype.extend({
    
    checked: Control.chain( "$input", "prop/checked" ),
    content: Control.chain( "$LabeledInput_content", "content" ),
    disabled: Control.chain( "$input", "prop/disabled" ),
    
    initialize: function() {
        var id = LabeledInput.generateUniqueId();
        this.$input().prop( "id", id );
        this.$LabeledInput_content().prop( "for", id );
    },
    
    type: Control.chain( "$input", "prop/type" )

});

// Class members
LabeledInput.extend({
    
    generateUniqueId: function() {
        return "_input" + this._count++;
    },
    
    _count: 0
    
});
</script>

</Control>
