<!-- Load different content, control class, or styles depending on the type of device. -->

<Control className="DeviceSpecific">

<script>
DeviceSpecific.prototype.extend({

    "defaultClass": Control.property[ "class" ](),
    "mobileClass": Control.property[ "class" ](),
    "default": Control.property(),
    "mobile": Control.property(),
    
    initialize: function() {

        var deviceClass;
        var deviceClasses;
        var deviceContent;

        // Determine which content, class, and styles to apply.        
        if ( DeviceSpecific.isMobile() ) {
            deviceClass = this.mobileClass();
            deviceClasses = "mobile";
            deviceContent = this.mobile();
        }
        if ( deviceClass === undefined ) {
            deviceClass = this.defaultClass();
        }
        if ( deviceContent === undefined ) {
            deviceContent = this["default"]();
        }
        
        // Transmute, if requested. After this, we need to take care to 
        // reference the control with the new class; "this" will be the old class. 
        var $control = deviceClass
            ? this.transmute( deviceClass, false, true )
            : this;
        
        // Apply device-specific content, if defined.
        if ( deviceContent ) {
            $control.content( deviceContent );
        }
        
        // Apply device-specific CSS classes, if defined.
        if ( deviceClasses ) {
            $control.addClass( deviceClasses );
        }
    }
});

// Class methods
DeviceSpecific.extend({
    isMobile: function() {
        var userAgent = navigator.userAgent;
        return ( userAgent.indexOf("Mobile") >= 0 && userAgent.indexOf("iPad") < 0 ); 
    }    
});
</script>

</Control>
