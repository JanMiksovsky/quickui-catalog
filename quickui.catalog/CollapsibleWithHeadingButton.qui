<Control name="CollapsibleWithHeadingButton">

<prototype>
    <Collapsible>
        <heading>
            <BasicButton id="headingButton">
                <div id="collapsedButtonContent">+</div>
                <div id="expandedButtonContent">âˆ’</div> <!-- Minus sign, not hyphen -->
            </BasicButton>
            <Fader id="CollapsibleWithHeadingButton_heading"/>
        </heading>
    </Collapsible>
</prototype>

<style>
#headingButton {
    float: right;
}

#Collapsible_content {
    clear: both;
}

#collapsedButtonContent {
    display: none;
}
#expandedButtonContent {
    display: block;
}
.CollapsibleWithHeadingButton.collapsed #collapsedButtonContent {
    display: block;
}
.CollapsibleWithHeadingButton.collapsed #expandedButtonContent {
    display: none;
}

/* Generic appearance */
.CollapsibleWithHeadingButton.generic {
    padding: 0;
}

.CollapsibleWithHeadingButton.generic #Collapsible_heading {
    background: #e5e5e5;
    padding: 1em;
    
}

.CollapsibleWithHeadingButton.generic #CollapsibleWithHeadingButton_heading {
    background: #e5e5e5;    /* Fader requires explicit background color. */
}

.CollapsibleWithHeadingButton.generic #headingButton {
    font-weight: normal;
    margin-left: 1em;
}

.CollapsibleWithHeadingButton.generic #headingButton.BasicButton.generic {
    padding: 0 0.25em;
}

.CollapsibleWithHeadingButton.generic #Collapsible_content {
    margin-top: 0;
    padding: 1em;
}

/* Hovering over heading triggers button's hover state */
/*
.CollapsibleWithHeadingButton.generic #Collapsible_heading:hover {
    background-color: lightgray;
}
*/
</style>

<script>
CollapsibleWithHeadingButton.prototype.extend({
    
    /*
     * The class of the heading button.
     */
    buttonClass: Control.chain( "$headingButton", "transmute" ),
    
    /*
     * The content of the heading button when the panel is collapsed.
     */
    collapsedButtonContent: Control.chain( "$collapsedButtonContent", "content" ), 
    
    /*
     * The content of the heading button when the panel is expanded.
     */
    expandedButtonContent: Control.chain( "$expandedButtonContent", "content" ),
    
    /*
     * The heading shown at the top of the panel.
     */
    heading: Control.chain( "$CollapsibleWithHeadingButton_heading", "content" ),
    
    initialize: function() {
        this._super();
        this.genericIfClassIs( CollapsibleWithHeadingButton );
        
        var $button = this.$headingButton();
        this.$CollapsibleWithHeadingButton_heading().hover(
            function hoverIn() { $button.addClass( "hovered" ); },
            function hoverOut() { $button.removeClass( "hovered" ); }
        );
    }
    
});
</script>

</Control>