<Control className="SearchBox" genericDefault="true">

<content>
    <HintTextBox ref="SearchBox_content" hint="Search"/>
    <BasicButton ref="searchButton">
        <img ref="searchIcon" src="http://quickui.org/release/resources/search_16x16.png"/>
    </BasicButton>
</content>

<style>
{
    display: inline-block;
    position: relative;
}

.SearchBox_content {
    display: block;
}
.SearchBox_content input {
    margin: 0;              /* For WebKit */
    padding-right: 1.3em;   /* Avoid overlap with icon */
}

.searchButton {
    bottom: 2px;
    padding: 0;
    position: absolute;
    right: 2px;
    top: 2px;
}
.searchIcon {
    -moz-box-sizing: border-box;
    box-sizing: border-box;
    display: block;         /* Remove inline padding */
    height: 1.3em;          /* Try to scale icon to text size */
    padding: 0.2em;
    width: 1.3em;
}

/* Generic appearance */
.SearchBox.generic .searchButton.generic {
    border: none;
}
.SearchBox.generic .searchButton.generic.disabled .searchIcon {
    opacity: 0.5;
}
</style>

<script>
SearchBox.prototype.extend({

    /*
     * The content of the text box.
     */    
    content: function(value) {
        result = this.$SearchBox_content().content(value); 
        if (value !== undefined) 
        {
            this._disableButtonIfContentEmpty();
        }
        return result;
    },
    
    /*
     * A hint to show in the text box.
     */    
    hint: Control.chain( "$SearchBox_content", "hint" ),

    initialize: function() {
        
        if ( !this.query() ) {
            var hostname = window.location.hostname;
            this.query( "http://www.google.com/search?q=%s+site%3A" + hostname );
        }
        
        var self = this;
        this.$searchButton().on( "click", function() {
            self.search();
        });
        this.$SearchBox_content().on({
            "change keyup": function( event ) {
                self._disableButtonIfContentEmpty();
            },
            keydown: function( event ) {
                if ( !self._isContentEmpty() ) {
                    switch ( event.which ) {
                        
                        case 13: /* Enter */
                            self.search();
                            event.stopPropagation();
                            break;
                            
                        case 27: /* Escape */
                            self.content( null );
                            event.stopPropagation();
                            break;
                        
                    }
                }
            } 
        });

        this._disableButtonIfContentEmpty();
    },
    
    /*
     * The search query that should be executed when the user presses the "Go"
     * button. This should be string containing the sequence "%s", which will
     * be replaced with the search terms the user has entered in the text box.
     * The default value of this property will use Google to search the
     * current site.
     */
    query: Control.property(),
    
    /*
     * Initiate the search. If the query is undefined or null, this has no
     * effect.
     */
    search: Control.iterator( function() {
        var query = this.query();
        if ( query ) {
            var searchTerms = this.content();
            var url = query.replace( "%s", searchTerms );
            window.location.href = url;
        }
    }),

    _disableButtonIfContentEmpty: function() {
        this.$searchButton().disabled( this._isContentEmpty() );
    },

    _isContentEmpty: function() {
        var content = this.content();
        return !( content && content.length > 0 );
    }

});
</script>

</Control>
