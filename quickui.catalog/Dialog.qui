<!--
Base class for modal dialogs.
-->

<Control className="Dialog">

<prototype>
    <Popup
        modal="true"
        closeOnInsideClick="false"
    />
</prototype>

<style>
{
    position: fixed;
}

/* Generic appearance */
.Dialog.generic {
    background-color: white;
    border: 1px solid black;
    padding: .75em;
}
</style>

<script>
Dialog.prototype.extend({

    /*
     * Cancel the dialog. This implicitly closes the dialog.
     */    
    cancel: function() {
        this._super();
        this.remove();
    },
    
    /*
     * Close the dialog normally.
     */
    close: function() {
        this._super();
        this.remove();
    },
    
    initialize: function() {
        this._super();
        this.genericIfClassIs( Dialog );
        var self = this;
        this.positionPopup( function() {
            self._positionPopup();
        });
    },
    
    /*
     * Position the dialog.
     * By default, center dialog horizontally and vertically. 
     */
    _positionPopup: function() {
        return this.css({
            left: ( $( window ).width() - this.outerWidth() ) / 2,
            top: ( $( window ).height() - this.outerHeight() ) / 2
        });
    }

});

// Class methods
Dialog.extend({
    showDialog: function( dialogClass, properties, callbackOk, callbackCancel ) {
        $("body")
            .append( "<div/>" )
            .find( ":last" )
            .on({
                closed: function() {
                    if ( callbackOk ) {
                        callbackOk.call( $( this ).control() );
                    }
                },
                canceled: function() {
                    if ( callbackCancel ) {
                        callbackCancel.call( $( this ).control() );
                    }
                }
            })
            .control( dialogClass, properties )
            .open();
    }
});
</script>

</Control>
