<!-- Month calendar with headings for month name and year, plus days of week -->

<Control className="CalendarMonthWithHeadings" generic="true">

<content>
    <MonthAndYear ref="monthAndYear"/>
    <div ref="monthTable">
        <DaysOfWeek ref="daysOfWeek" format="namesShort"/>
        <CalendarMonth ref="calendar"/>
    </div>
</content>

<style>
.monthAndYear {
    display: block;
}

.monthTable {
    display: table;
    width: 100%;
}

.daysOfWeek {
    display: table-header-group;
}

/* Generic appearance */
.CalendarMonthWithHeadings.generic {
    display: inline-block;
    font-family: sans-serif;
}
.CalendarMonthWithHeadings.generic .monthAndYear {
    font-weight: bold;
    padding: 4px;
    text-align: center;
}
.CalendarMonthWithHeadings.generic .daysOfWeek {
    font-size: smaller;
}
</style>

<script>
CalendarMonthWithHeadings.prototype.extend({
    
    /*
     * The control's current culture.
     */
    culture: Control.iterator( function( culture ) {
        // var result = this._super( culture );
        var result = this.constructor.superclass.prototype.culture.call( this, culture );
        if ( culture !== undefined ) {
            this.$monthAndYear().culture( culture );
            this.$daysOfWeek().culture( culture );
            this.$calendar().culture( culture );
            var date = this.date();
            if ( date ) {
                this.date( date );
            }
        }
        return result;
    }),
    
    /* The date shown in the calendar */
    date: Control.chain( "$calendar", "date", function( date ) {
        this.$monthAndYear().date( date );
    }),
    
    /*
     * The class used to represent days in the month.
     */
    dayClass: Control.chain( "$calendar", "dayClass" ),

    /*
     * The controls used for the days in the calendar.
     */
    days: Control.chain( "$calendar", "days" ),

    /*
     * Returns the control currently showing the given date.
     */
    dayControlForDate: function( date ) {
        return this.$calendar().dayControlForDate( date );
    },

    /*
     * The format used to show day headings. See DaysOfWeek.
     */
    dayNameFormat: Control.chain( "$daysOfWeek", "format" ),
    
    initialize: function() {
        if ( !this.date() ) {
            // By default, show current month.
            this.date( CalendarDay.today() );
        } else {
            // Sync month and year with calendar.
            this.$monthAndYear().date( this.date() );
        }
    },

    /*
     * True if the month name and year should be shown.
     */
    showMonthAndYear: Control.chain( "$monthAndYear", "visibility" )
    
});
</script>

</Control>
