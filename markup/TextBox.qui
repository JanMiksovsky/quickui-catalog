<!--
General purpose base class for text box controls.

This simply wraps a normal input element.
-->

<Control className="TextBox" tag="input">

<script>
TextBox.prototype.extend({
    
    content: function( content ) {
        var result = this._super( content );
        if ( content !== undefined ) {
            /*
             * Setting content programmatically generates a change event
             * so that the UI can react accordingly.
             */
            this.trigger( "change" );
        }
        return result;
    },

    /* True if the text box is disabled. */
    disabled: Control.chain( "prop/disabled" ),
    
    initialize: function() {
        // Explicitly stamp type="text" on the control if a type hasn't been
        // set. Chrome reports the type as "text" even if no type has actually
        // been set, but the code below will at least upgrade that implict type
        // to an explicit type.
        if ( this.type() == "text" ) {
            this.type( "text" );
        }
    },

    /*
     * The placeholder (hint text) shown in the text box if it's empty.
     */
    placeholder: Control.chain( "prop/placeholder" ),

    /*
     * True if the text box should do spell-checking.
     */
    spellcheck: Control.chain( "prop/spellcheck" ),

    /*
     * The type of input: "text", "email", "password", etc.
     */
    type: Control.chain( "prop/type" )
    
});
</script>

</Control>
