<!-- Pick exactly one child to show at a time. -->

<Control className="Modes">

<prototype>
    <Sequence/>
</prototype>

<style>
> .inactive {
    display: none !important;
}

.Modes.maximize {
    position: relative;
}
.Modes.maximize > .active {
    visiblity: visible;
}
.Modes.maximize > .inactive {
    display: inherit !important;
    position: absolute;
    top: 0;
    visibility: hidden;
}
</style>

<script>
Modes.prototype.extend({

    initialize: function() {
        var self = this;
        this.on( "layout sizeChanged", function() {
            self._sizeChanged();
        });
        this.inDocument( function() {
            this._sizeChanged();
        });
    },
    
    /*
     * True if the control should always adjust its own height to be as tall
     * as its tallest child, whether or not that child is currently active.
     */
    maximize: Control.chain( "applyClass/maximize" ),
    
    /*
     * The size of a child may have changed. Make the control as tall as the
     * tallest child.
     */
    _sizeChanged: function() {

        if ( !this.maximize() ) {
            return;
        }
        
        var elements = this.elements();
        if ( elements.length === 0 ) {
            return;
        }
        
        var childHeights = elements.map( function( index, child ) {
            return $( child ).outerHeight( true );
        }).get();
        
        var maxChildHeight = Math.max.apply( this, childHeights );
        if ( maxChildHeight > 0 ) {
            this.height( maxChildHeight );
        }
    }
        
});
</script>

</Control>
