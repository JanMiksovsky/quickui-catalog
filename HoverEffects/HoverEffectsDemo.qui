<Control name="HoverEffectsDemo">

<content>
    <HoverEffects content="1"/>
    <HoverEffects content="2"/>
    <HoverEffects content="3"/>
    <HoverEffects content="4"/>
    <HoverEffects content="5"/>
</content>

<style>
{
    color: #444;
    padding: 5px;
}

> * {
    display: inline-block;
    vertical-align: top;
}

/*
 * It'd be preferable to use a subclass to define these attributes. It's not
 * normally good to directly style an inner element from outside a control. For
 * demo purposes, however, we'll take a shortcut and directly set the style
 * of the HoverEffect's content.
 */
.HoverEffects #HoverEffects_content {
    background-color: #e8e8e8;
    border: 3px solid #e0e0e0;
    cursor: default;
    font-family: Arial, Helvetica, sans-serif;
    font-size: 32px;
    font-weight: bold;
    height: 40px;
    padding-left: 5px;
    -moz-user-select: -moz-none;
    -webkit-user-select: none;
    user-select: none;
    width: 40px;
}
</style>

<script>
HoverEffectsDemo.prototype.extend({
    initialize: function() {
        
        // Remove extra white space nodes so inline controls touch.
        this.contents()
            .filter( function() { return this.nodeType === 3; })
            .remove();
        
        /*
         * On hover, we'll grow the element in each direction by 5px, and
         * fade in some higher-contrast colors.
         */
        this.children().control()
            .effects({
                "background-color": "#ffffff",
                "border-color": "#ffd700",
                "color": "#000000",
                "height": "50px",
                "left": "-5px",
                "top": "-5px",
                "width": "50px"
            });
    }
});
</script>

</Control>
