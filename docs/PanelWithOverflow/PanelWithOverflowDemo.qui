<Control className="PanelWithOverflowDemo">

<content>
    <PanelWithOverflow ref="toolbar">
        <BasicButton class="toolbarButton" content="One"/>
        <BasicButton class="toolbarButton" content="Two"/>
        <BasicButton class="toolbarButton" content="Three"/>
        <BasicButton class="toolbarButton" content="Four"/>
        <BasicButton class="toolbarButton" content="Five"/>
        <BasicButton class="toolbarButton" content="Six"/>
        <BasicButton class="toolbarButton" content="Seven"/>
        <BasicButton class="toolbarButton" content="Eight"/>
        <BasicButton class="toolbarButton" content="Nine"/>
        <BasicButton class="toolbarButton" content="Ten"/>
        <BasicButton class="toolbarButton" content="Eleven"/>
        <BasicButton class="toolbarButton" content="Twelve"/>
    </PanelWithOverflow>
    <p style="margin: 1em;">
        Resize this window to be narrower or wider, and the toolbar buttons
        will overflow as necessary to remain available.
    </p>
</content>

<style>
{
    margin: 0;
    padding: 0;
}

.toolbar {
    background: whitesmoke;
    border-bottom: 1px solid #e5e5e5;
    padding: 10px;
}

.toolbarButton {
    margin-right: 10px;
}
.toolbarButton:last-child {
    margin-right: 0;
}

.Popup .toolbarButton {
    background: none;
    border-color: transparent;
    margin-right: 0;
    margin-bottom: 5px;
}
.Popup .toolbarButton:last-child {
    margin-bottom: 0;
}
</style>

<script>
PanelWithOverflowDemo.prototype.extend({
    initialize: function() {
        // Remove extra white space nodes so inline controls touch.
        var content = this.$toolbar().content();
        var stripped = $.grep( content, function( item ) {
            return typeof item !== "string";
        });
        this.$toolbar().content( stripped );
    }
});
</script>

</Control>
